name: Build

on:
  push:
    tags:
      - v*

jobs:
  release:
    name: build and release electron app
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Check out git repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Dependencies
        run: npm install

      - name: Build Electron App
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          
      - name: List build output
        run: |
          echo "Release directory contents:"
          ls -la release
          echo "Dist-electron directory contents:"
          ls -la dist-electron

      - name: Cleanup Artifacts for Windows
        if: matrix.os == 'windows-latest'
        run: |
          npx rimraf "release/!(*.exe)"

      - name: Cleanup Artifacts for MacOS
        if: matrix.os == 'macos-latest'
        run: |
          npx rimraf "release/!(*.dmg)"

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: release

      - name: release
        id: create_release
        uses: samuelmeuli/action-electron-builder@v1.6.0
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.ACCESS_TOKEN }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

      - uses: actions/upload-artifact@v4
        with:
          name: ELI-demo-mac
          path: release/*-universal.dmg
          if-no-files-found: ignore

      - uses: actions/upload-artifact@v4
        with:
          name: ELI-demo-win
          path: release/*Setup*.exe
          if-no-files-found: ignore

      - uses: actions/upload-artifact@v4
        with:
          name: ELI-demo-linux
          path: release/*.AppImage
          if-no-files-found: ignore
